<?php

namespace AppBundle\Repository;

/**
 * PostsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PostsRepository extends \Doctrine\ORM\EntityRepository
{ 
  public function countPosts()
  {
    $query = $this->createQueryBuilder('p')
        ->select('count(p.id)')
        ->innerJoin('AppBundle:Category', 'c', 'WITH', 'p.categoryId = c.id')
        ->where("c.name != 'Page'")
        ->getQuery()
        ->getSingleScalarResult();
    
    return $query;
  }
  
  public function getPosts()
  {
    $query = $this->createQueryBuilder('p')
        ->innerJoin('AppBundle:Category', 'c', 'WITH', 'p.categoryId = c.id')
        ->where("c.name != 'Page'")
        ->addOrderBy('p.distinguished', 'DESC')
        ->addOrderBy('p.createdAt', 'DESC')
        ->getQuery();
    
    return $query;
  }
  
  public function getPostsByCategoryId($id)
  {
    $query = $this->createQueryBuilder('p')
      ->where('p.categoryId = :cat')
      ->addOrderBy('p.createdAt', 'DESC')
      ->setParameter('cat', $id)
      ->getQuery();
    
    return $query;
  }
  
  public function getPostsByUserId($id)
  {
    $query = $this->createQueryBuilder('p')
      ->innerJoin('AppBundle:Category', 'c', 'WITH', 'p.categoryId = c.id')
      ->where("c.name != 'Page' AND p.userId = :id")
      ->addOrderBy('p.createdAt', 'DESC')
      ->setParameter('id', $id)
      ->getQuery();
    
    return $query;
  }
  
}